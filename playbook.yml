---
- name: "1D. PASS_MAX_DAYS"
  hosts: localhost
  tasks:
  - block:
    ###############################
    # Test case 1: File not found #
    ###############################
      - name: "Finding /etc/login.defs"
        stat:
          path: '/etc/login.defs'
        register: file_exist
      - name: "Test case 1 - File not found"
        fail: 
          msg: "[FAIL] /etc/login.defs not found, SSH cannot be started"
        when: not file_exist.stat.exists
   
   ##############################
   # Test case 2: Key not found #
   ##############################
      - name: "Setup"
        set_fact:
        # \s* matches \t as well, \t = 3 x \s
          targets: "{{ lookup('file', '/etc/login.defs') | regex_findall('\\n\\s*PASS_MAX_DAYS.*') | trim }}"
      - name: "Test case 2 - Key not found"
        fail:
          msg: "[FAIL] PASS_MAX_DAYS key cannot be found, SSH cannot be started"
        when: targets | length == 0
   
   #########################
   # Test case 3: No value #
   #########################
      - name: "Finding - no value"
     # find lines with both key and value, if cannot be found, then no value found
        set_fact: 
          targetTC3: "{{ targets | select('search', '\\n\\s*PASS_MAX_DAYS\\s+\\S+') | list }}"
      - name: "Test case 3: - No value"
        fail:
          msg: "[FAIL] PASS_MAX_DAYS has no value, SSH cannot be started"
        when: targetTC3 | length == 0
   
   ################################
   # Test case 4: Multiple values #
   ################################
      - name: "Finding - Multiple values"
        set_fact:
          targetTC4: "{{ targetTC3 | last | regex_findall('\\n\\s*PASS_MAX_DAYS\\s+\\S+\\s+[^#]\\S+') }}"
      - name: "Test case 4 - Multiple values"
        fail:
          msg: "[FAIL] PASS_MAX_DAYS has multiple values, SSH cannot be started"
        when: targetTC4 | length > 0

   ##############################
   # Test case 5: Invalid value #
   ##############################
      - name: "Finding - Invalid value"
        set_fact:
        # "()" creates a capture group and indicates precedence - findall helps capture the value within the "()"
          targetTC5: "{{ targetTC3 | last | regex_findall('\\n\\s*PASS_MAX_DAYS\\s+(.+\\b)') }}"
          int_Converted: "X"

      - name: "Attempting convertion, Hex -> Deci"
        set_fact:
          int_Converted: "{{ targetTC5[0] | int(base=16) }}"
        when: targetTC5[0] | regex_search('^-*0[xX][0-9a-fA-F]+$')
    
      - name: "Attempting convertion, Octal -> Deci"
        set_fact:
          int_Converted: "{{ targetTC5[0] | int(base=8) }}"
        when: int_Converted == 'X' and targetTC5[0] | regex_search('^-*0[0-7]+$')
    
      - name: "Test case 5 - Invalid value"
        fail:
          msg: "[FAIL] PASS_MAX_DAYS has an invalid value, SSH cannot be started"
        when: int_Converted == 'X' or ( int_Converted | int ) < -1 or ( int_Converted | int ) > 99999

   ####################################
   # Test case 6: Non-compliant value #
   ####################################
      - name: "Test case 6 - Non-compliant value"
        fail:
          msg: "[FAIL] PASS_MAX_DAYS is not set to 90 days or less"
        when: ( int_Converted | int ) < 0 or ( int_Converted | int ) > 90
   
   ################################
   # Test case 7: Compliant value #
   ################################
      - name: "Test case 7: Compliant value"
        debug:
          msg: "Password expiration is set to 90 days or less"
    rescue:
      - name: "Sending Email"
        debug:
          msg: "Sending Email"
